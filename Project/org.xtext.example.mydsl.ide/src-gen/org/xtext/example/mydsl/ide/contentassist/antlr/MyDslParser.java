/*
 * generated by Xtext 2.36.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getTournamentFormatAccess().getAlternatives(), "rule__TournamentFormat__Alternatives");
			builder.put(grammarAccess.getPlayerStatisticsAccess().getAlternatives(), "rule__PlayerStatistics__Alternatives");
			builder.put(grammarAccess.getMatchRulesAccess().getAlternatives(), "rule__MatchRules__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getTournamentTypeAccess().getAlternatives(), "rule__TournamentType__Alternatives");
			builder.put(grammarAccess.getPlayerPositionAccess().getAlternatives(), "rule__PlayerPosition__Alternatives");
			builder.put(grammarAccess.getFinalsFormatAccess().getAlternatives(), "rule__FinalsFormat__Alternatives");
			builder.put(grammarAccess.getTieBreakerRuleAccess().getAlternatives(), "rule__TieBreakerRule__Alternatives");
			builder.put(grammarAccess.getBracketSideAccess().getAlternatives(), "rule__BracketSide__Alternatives");
			builder.put(grammarAccess.getMatchResultAccess().getAlternatives(), "rule__MatchResult__Alternatives");
			builder.put(grammarAccess.getTournamentAccess().getGroup(), "rule__Tournament__Group__0");
			builder.put(grammarAccess.getTournamentAccess().getGroup_3(), "rule__Tournament__Group_3__0");
			builder.put(grammarAccess.getTournamentAccess().getGroup_4(), "rule__Tournament__Group_4__0");
			builder.put(grammarAccess.getTournamentAccess().getGroup_4_3(), "rule__Tournament__Group_4_3__0");
			builder.put(grammarAccess.getTournamentAccess().getGroup_10(), "rule__Tournament__Group_10__0");
			builder.put(grammarAccess.getTeamAccess().getGroup(), "rule__Team__Group__0");
			builder.put(grammarAccess.getTeamAccess().getGroup_3(), "rule__Team__Group_3__0");
			builder.put(grammarAccess.getTeamAccess().getGroup_4(), "rule__Team__Group_4__0");
			builder.put(grammarAccess.getTeamAccess().getGroup_8(), "rule__Team__Group_8__0");
			builder.put(grammarAccess.getBracketAccess().getGroup(), "rule__Bracket__Group__0");
			builder.put(grammarAccess.getBracketAccess().getGroup_2(), "rule__Bracket__Group_2__0");
			builder.put(grammarAccess.getBracketAccess().getGroup_3(), "rule__Bracket__Group_3__0");
			builder.put(grammarAccess.getBracketAccess().getGroup_7(), "rule__Bracket__Group_7__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getPlayerAccess().getGroup(), "rule__Player__Group__0");
			builder.put(grammarAccess.getPlayerAccess().getGroup_3(), "rule__Player__Group_3__0");
			builder.put(grammarAccess.getPlayerAccess().getGroup_4(), "rule__Player__Group_4__0");
			builder.put(grammarAccess.getPlayerAccess().getGroup_5(), "rule__Player__Group_5__0");
			builder.put(grammarAccess.getDefenderAccess().getGroup(), "rule__Defender__Group__0");
			builder.put(grammarAccess.getDefenderAccess().getGroup_3(), "rule__Defender__Group_3__0");
			builder.put(grammarAccess.getDefenderAccess().getGroup_4(), "rule__Defender__Group_4__0");
			builder.put(grammarAccess.getDefenderAccess().getGroup_5(), "rule__Defender__Group_5__0");
			builder.put(grammarAccess.getDefenderAccess().getGroup_6(), "rule__Defender__Group_6__0");
			builder.put(grammarAccess.getDefenderAccess().getGroup_7(), "rule__Defender__Group_7__0");
			builder.put(grammarAccess.getDefenderAccess().getGroup_8(), "rule__Defender__Group_8__0");
			builder.put(grammarAccess.getGoalkeeperAccess().getGroup(), "rule__Goalkeeper__Group__0");
			builder.put(grammarAccess.getGoalkeeperAccess().getGroup_3(), "rule__Goalkeeper__Group_3__0");
			builder.put(grammarAccess.getGoalkeeperAccess().getGroup_4(), "rule__Goalkeeper__Group_4__0");
			builder.put(grammarAccess.getGoalkeeperAccess().getGroup_5(), "rule__Goalkeeper__Group_5__0");
			builder.put(grammarAccess.getGoalkeeperAccess().getGroup_6(), "rule__Goalkeeper__Group_6__0");
			builder.put(grammarAccess.getGoalkeeperAccess().getGroup_7(), "rule__Goalkeeper__Group_7__0");
			builder.put(grammarAccess.getGoalkeeperAccess().getGroup_8(), "rule__Goalkeeper__Group_8__0");
			builder.put(grammarAccess.getGoalkeeperAccess().getGroup_9(), "rule__Goalkeeper__Group_9__0");
			builder.put(grammarAccess.getAttackerAccess().getGroup(), "rule__Attacker__Group__0");
			builder.put(grammarAccess.getAttackerAccess().getGroup_3(), "rule__Attacker__Group_3__0");
			builder.put(grammarAccess.getAttackerAccess().getGroup_4(), "rule__Attacker__Group_4__0");
			builder.put(grammarAccess.getAttackerAccess().getGroup_5(), "rule__Attacker__Group_5__0");
			builder.put(grammarAccess.getAttackerAccess().getGroup_6(), "rule__Attacker__Group_6__0");
			builder.put(grammarAccess.getAttackerAccess().getGroup_7(), "rule__Attacker__Group_7__0");
			builder.put(grammarAccess.getAttackerAccess().getGroup_8(), "rule__Attacker__Group_8__0");
			builder.put(grammarAccess.getLeagueAccess().getGroup(), "rule__League__Group__0");
			builder.put(grammarAccess.getLeagueAccess().getGroup_4(), "rule__League__Group_4__0");
			builder.put(grammarAccess.getLeagueAccess().getGroup_5(), "rule__League__Group_5__0");
			builder.put(grammarAccess.getLeagueAccess().getGroup_6(), "rule__League__Group_6__0");
			builder.put(grammarAccess.getLeagueAccess().getGroup_7(), "rule__League__Group_7__0");
			builder.put(grammarAccess.getLeagueAccess().getGroup_8(), "rule__League__Group_8__0");
			builder.put(grammarAccess.getRoundRobinAccess().getGroup(), "rule__RoundRobin__Group__0");
			builder.put(grammarAccess.getRoundRobinAccess().getGroup_4(), "rule__RoundRobin__Group_4__0");
			builder.put(grammarAccess.getRoundRobinAccess().getGroup_5(), "rule__RoundRobin__Group_5__0");
			builder.put(grammarAccess.getRoundRobinAccess().getGroup_6(), "rule__RoundRobin__Group_6__0");
			builder.put(grammarAccess.getRoundRobinAccess().getGroup_7(), "rule__RoundRobin__Group_7__0");
			builder.put(grammarAccess.getRoundRobinAccess().getGroup_8(), "rule__RoundRobin__Group_8__0");
			builder.put(grammarAccess.getRoundRobinAccess().getGroup_9(), "rule__RoundRobin__Group_9__0");
			builder.put(grammarAccess.getRoundRobinAccess().getGroup_10(), "rule__RoundRobin__Group_10__0");
			builder.put(grammarAccess.getRoundRobinAccess().getGroup_11(), "rule__RoundRobin__Group_11__0");
			builder.put(grammarAccess.getKnockoutAccess().getGroup(), "rule__Knockout__Group__0");
			builder.put(grammarAccess.getKnockoutAccess().getGroup_5(), "rule__Knockout__Group_5__0");
			builder.put(grammarAccess.getKnockoutAccess().getGroup_6(), "rule__Knockout__Group_6__0");
			builder.put(grammarAccess.getKnockoutAccess().getGroup_7(), "rule__Knockout__Group_7__0");
			builder.put(grammarAccess.getKnockoutAccess().getGroup_8(), "rule__Knockout__Group_8__0");
			builder.put(grammarAccess.getMatchAccess().getGroup(), "rule__Match__Group__0");
			builder.put(grammarAccess.getMatchAccess().getGroup_2(), "rule__Match__Group_2__0");
			builder.put(grammarAccess.getMatchAccess().getGroup_3(), "rule__Match__Group_3__0");
			builder.put(grammarAccess.getMatchAccess().getGroup_4(), "rule__Match__Group_4__0");
			builder.put(grammarAccess.getMatchAccess().getGroup_5(), "rule__Match__Group_5__0");
			builder.put(grammarAccess.getMatchAccess().getGroup_9(), "rule__Match__Group_9__0");
			builder.put(grammarAccess.getStandardAccess().getGroup(), "rule__Standard__Group__0");
			builder.put(grammarAccess.getExtraTimeAccess().getGroup(), "rule__ExtraTime__Group__0");
			builder.put(grammarAccess.getExtraTimeAccess().getGroup_3(), "rule__ExtraTime__Group_3__0");
			builder.put(grammarAccess.getExtraTimeAccess().getGroup_4(), "rule__ExtraTime__Group_4__0");
			builder.put(grammarAccess.getPenaltyShootoutAccess().getGroup(), "rule__PenaltyShootout__Group__0");
			builder.put(grammarAccess.getPenaltyShootoutAccess().getGroup_3(), "rule__PenaltyShootout__Group_3__0");
			builder.put(grammarAccess.getGroupStageAccess().getGroup(), "rule__GroupStage__Group__0");
			builder.put(grammarAccess.getGroupStageAccess().getGroup_3(), "rule__GroupStage__Group_3__0");
			builder.put(grammarAccess.getTournamentAccess().getNameAssignment_1(), "rule__Tournament__NameAssignment_1");
			builder.put(grammarAccess.getTournamentAccess().getTournamentTypeAssignment_3_1(), "rule__Tournament__TournamentTypeAssignment_3_1");
			builder.put(grammarAccess.getTournamentAccess().getTeamsAssignment_4_2(), "rule__Tournament__TeamsAssignment_4_2");
			builder.put(grammarAccess.getTournamentAccess().getTeamsAssignment_4_3_1(), "rule__Tournament__TeamsAssignment_4_3_1");
			builder.put(grammarAccess.getTournamentAccess().getTournamentformatAssignment_6(), "rule__Tournament__TournamentformatAssignment_6");
			builder.put(grammarAccess.getTournamentAccess().getBracketsAssignment_9(), "rule__Tournament__BracketsAssignment_9");
			builder.put(grammarAccess.getTournamentAccess().getBracketsAssignment_10_1(), "rule__Tournament__BracketsAssignment_10_1");
			builder.put(grammarAccess.getTeamAccess().getNameAssignment_1(), "rule__Team__NameAssignment_1");
			builder.put(grammarAccess.getTeamAccess().getTeamSizeAssignment_3_1(), "rule__Team__TeamSizeAssignment_3_1");
			builder.put(grammarAccess.getTeamAccess().getManagerNameAssignment_4_1(), "rule__Team__ManagerNameAssignment_4_1");
			builder.put(grammarAccess.getTeamAccess().getPlayersAssignment_7(), "rule__Team__PlayersAssignment_7");
			builder.put(grammarAccess.getTeamAccess().getPlayersAssignment_8_1(), "rule__Team__PlayersAssignment_8_1");
			builder.put(grammarAccess.getBracketAccess().getRoundsAssignment_2_1(), "rule__Bracket__RoundsAssignment_2_1");
			builder.put(grammarAccess.getBracketAccess().getBracketSideAssignment_3_1(), "rule__Bracket__BracketSideAssignment_3_1");
			builder.put(grammarAccess.getBracketAccess().getMatchesAssignment_6(), "rule__Bracket__MatchesAssignment_6");
			builder.put(grammarAccess.getBracketAccess().getMatchesAssignment_7_1(), "rule__Bracket__MatchesAssignment_7_1");
			builder.put(grammarAccess.getPlayerAccess().getNameAssignment_1(), "rule__Player__NameAssignment_1");
			builder.put(grammarAccess.getPlayerAccess().getPositionAssignment_3_1(), "rule__Player__PositionAssignment_3_1");
			builder.put(grammarAccess.getPlayerAccess().getBirthDateAssignment_4_1(), "rule__Player__BirthDateAssignment_4_1");
			builder.put(grammarAccess.getPlayerAccess().getNumberAssignment_5_1(), "rule__Player__NumberAssignment_5_1");
			builder.put(grammarAccess.getPlayerAccess().getPlayerstatisticsAssignment_7(), "rule__Player__PlayerstatisticsAssignment_7");
			builder.put(grammarAccess.getDefenderAccess().getGoalsAssignment_3_1(), "rule__Defender__GoalsAssignment_3_1");
			builder.put(grammarAccess.getDefenderAccess().getAssistsAssignment_4_1(), "rule__Defender__AssistsAssignment_4_1");
			builder.put(grammarAccess.getDefenderAccess().getFoulsAssignment_5_1(), "rule__Defender__FoulsAssignment_5_1");
			builder.put(grammarAccess.getDefenderAccess().getYellowCardsAssignment_6_1(), "rule__Defender__YellowCardsAssignment_6_1");
			builder.put(grammarAccess.getDefenderAccess().getRedCardsAssignment_7_1(), "rule__Defender__RedCardsAssignment_7_1");
			builder.put(grammarAccess.getDefenderAccess().getCleansheetsAssignment_8_1(), "rule__Defender__CleansheetsAssignment_8_1");
			builder.put(grammarAccess.getGoalkeeperAccess().getGoalsAssignment_3_1(), "rule__Goalkeeper__GoalsAssignment_3_1");
			builder.put(grammarAccess.getGoalkeeperAccess().getAssistsAssignment_4_1(), "rule__Goalkeeper__AssistsAssignment_4_1");
			builder.put(grammarAccess.getGoalkeeperAccess().getFoulsAssignment_5_1(), "rule__Goalkeeper__FoulsAssignment_5_1");
			builder.put(grammarAccess.getGoalkeeperAccess().getYellowCardsAssignment_6_1(), "rule__Goalkeeper__YellowCardsAssignment_6_1");
			builder.put(grammarAccess.getGoalkeeperAccess().getRedCardsAssignment_7_1(), "rule__Goalkeeper__RedCardsAssignment_7_1");
			builder.put(grammarAccess.getGoalkeeperAccess().getCleansheetsAssignment_8_1(), "rule__Goalkeeper__CleansheetsAssignment_8_1");
			builder.put(grammarAccess.getGoalkeeperAccess().getSavesAssignment_9_1(), "rule__Goalkeeper__SavesAssignment_9_1");
			builder.put(grammarAccess.getAttackerAccess().getGoalsAssignment_3_1(), "rule__Attacker__GoalsAssignment_3_1");
			builder.put(grammarAccess.getAttackerAccess().getAssistsAssignment_4_1(), "rule__Attacker__AssistsAssignment_4_1");
			builder.put(grammarAccess.getAttackerAccess().getFoulsAssignment_5_1(), "rule__Attacker__FoulsAssignment_5_1");
			builder.put(grammarAccess.getAttackerAccess().getYellowCardsAssignment_6_1(), "rule__Attacker__YellowCardsAssignment_6_1");
			builder.put(grammarAccess.getAttackerAccess().getRedCardsAssignment_7_1(), "rule__Attacker__RedCardsAssignment_7_1");
			builder.put(grammarAccess.getAttackerAccess().getSprintSpeedAssignment_8_1(), "rule__Attacker__SprintSpeedAssignment_8_1");
			builder.put(grammarAccess.getLeagueAccess().getNameAssignment_2(), "rule__League__NameAssignment_2");
			builder.put(grammarAccess.getLeagueAccess().getMaxTeamsAssignment_4_1(), "rule__League__MaxTeamsAssignment_4_1");
			builder.put(grammarAccess.getLeagueAccess().getMinTeamsAssignment_5_1(), "rule__League__MinTeamsAssignment_5_1");
			builder.put(grammarAccess.getLeagueAccess().getDescriptionAssignment_6_1(), "rule__League__DescriptionAssignment_6_1");
			builder.put(grammarAccess.getLeagueAccess().getNumberOfRoundsAssignment_7_1(), "rule__League__NumberOfRoundsAssignment_7_1");
			builder.put(grammarAccess.getLeagueAccess().getFinalsFormatAssignment_8_1(), "rule__League__FinalsFormatAssignment_8_1");
			builder.put(grammarAccess.getRoundRobinAccess().getNameAssignment_2(), "rule__RoundRobin__NameAssignment_2");
			builder.put(grammarAccess.getRoundRobinAccess().getMaxTeamsAssignment_4_1(), "rule__RoundRobin__MaxTeamsAssignment_4_1");
			builder.put(grammarAccess.getRoundRobinAccess().getMinTeamsAssignment_5_1(), "rule__RoundRobin__MinTeamsAssignment_5_1");
			builder.put(grammarAccess.getRoundRobinAccess().getDescriptionAssignment_6_1(), "rule__RoundRobin__DescriptionAssignment_6_1");
			builder.put(grammarAccess.getRoundRobinAccess().getPointsForWinAssignment_7_1(), "rule__RoundRobin__PointsForWinAssignment_7_1");
			builder.put(grammarAccess.getRoundRobinAccess().getPointsForDrawAssignment_8_1(), "rule__RoundRobin__PointsForDrawAssignment_8_1");
			builder.put(grammarAccess.getRoundRobinAccess().getPointsForLossAssignment_9_1(), "rule__RoundRobin__PointsForLossAssignment_9_1");
			builder.put(grammarAccess.getRoundRobinAccess().getNumberOfRoundsAssignment_10_1(), "rule__RoundRobin__NumberOfRoundsAssignment_10_1");
			builder.put(grammarAccess.getRoundRobinAccess().getTieBreakerRuleAssignment_11_1(), "rule__RoundRobin__TieBreakerRuleAssignment_11_1");
			builder.put(grammarAccess.getKnockoutAccess().getHasThirdPlacePlayoffAssignment_1(), "rule__Knockout__HasThirdPlacePlayoffAssignment_1");
			builder.put(grammarAccess.getKnockoutAccess().getNameAssignment_3(), "rule__Knockout__NameAssignment_3");
			builder.put(grammarAccess.getKnockoutAccess().getMaxTeamsAssignment_5_1(), "rule__Knockout__MaxTeamsAssignment_5_1");
			builder.put(grammarAccess.getKnockoutAccess().getMinTeamsAssignment_6_1(), "rule__Knockout__MinTeamsAssignment_6_1");
			builder.put(grammarAccess.getKnockoutAccess().getDescriptionAssignment_7_1(), "rule__Knockout__DescriptionAssignment_7_1");
			builder.put(grammarAccess.getKnockoutAccess().getNumberOfRoundsAssignment_8_1(), "rule__Knockout__NumberOfRoundsAssignment_8_1");
			builder.put(grammarAccess.getMatchAccess().getScoreTeam1Assignment_2_1(), "rule__Match__ScoreTeam1Assignment_2_1");
			builder.put(grammarAccess.getMatchAccess().getScoreTeam2Assignment_3_1(), "rule__Match__ScoreTeam2Assignment_3_1");
			builder.put(grammarAccess.getMatchAccess().getMatchResultAssignment_4_1(), "rule__Match__MatchResultAssignment_4_1");
			builder.put(grammarAccess.getMatchAccess().getDayAssignment_5_1(), "rule__Match__DayAssignment_5_1");
			builder.put(grammarAccess.getMatchAccess().getTeamsAssignment_8(), "rule__Match__TeamsAssignment_8");
			builder.put(grammarAccess.getMatchAccess().getTeamsAssignment_9_1(), "rule__Match__TeamsAssignment_9_1");
			builder.put(grammarAccess.getMatchAccess().getMatchrulesAssignment_12(), "rule__Match__MatchrulesAssignment_12");
			builder.put(grammarAccess.getStandardAccess().getTieBreakingAssignment_1(), "rule__Standard__TieBreakingAssignment_1");
			builder.put(grammarAccess.getStandardAccess().getExtraTimeAssignment_2(), "rule__Standard__ExtraTimeAssignment_2");
			builder.put(grammarAccess.getStandardAccess().getPenaltyShootoutsAssignment_3(), "rule__Standard__PenaltyShootoutsAssignment_3");
			builder.put(grammarAccess.getExtraTimeAccess().getExtraTimeAssignment_3_1(), "rule__ExtraTime__ExtraTimeAssignment_3_1");
			builder.put(grammarAccess.getExtraTimeAccess().getExtraTimeDurationAssignment_4_1(), "rule__ExtraTime__ExtraTimeDurationAssignment_4_1");
			builder.put(grammarAccess.getPenaltyShootoutAccess().getPenaltyShootoutsAssignment_3_1(), "rule__PenaltyShootout__PenaltyShootoutsAssignment_3_1");
			builder.put(grammarAccess.getGroupStageAccess().getTieBreakingAssignment_3_1(), "rule__GroupStage__TieBreakingAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
