/*
 * generated by Xtext 2.36.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class TournamentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Tournament");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTournamentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTournamentTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTournamentTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTournamentTypeTournamentTypeEnumRuleCall_3_1_0 = (RuleCall)cTournamentTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTeamsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTeamsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTeamsTeamParserRuleCall_4_2_0 = (RuleCall)cTeamsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cTeamsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cTeamsTeamParserRuleCall_4_3_1_0 = (RuleCall)cTeamsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cTournamentformatKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTournamentformatAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTournamentformatTournamentFormatParserRuleCall_6_0 = (RuleCall)cTournamentformatAssignment_6.eContents().get(0);
		private final Keyword cBracketsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cBracketsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cBracketsBracketParserRuleCall_9_0 = (RuleCall)cBracketsAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cBracketsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cBracketsBracketParserRuleCall_10_1_0 = (RuleCall)cBracketsAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Tournament returns Tournament:
		//    'Tournament'
		//    name=EString
		//    '{'
		//        ('tournamentType' tournamentType=TournamentType)?
		//        ('teams' '{' teams+=Team ( "," teams+=Team)* '}' )?
		//        'tournamentformat' tournamentformat=TournamentFormat
		//        'brackets' '{' brackets+=Bracket ( "," brackets+=Bracket)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Tournament'
		//name=EString
		//'{'
		//    ('tournamentType' tournamentType=TournamentType)?
		//    ('teams' '{' teams+=Team ( "," teams+=Team)* '}' )?
		//    'tournamentformat' tournamentformat=TournamentFormat
		//    'brackets' '{' brackets+=Bracket ( "," brackets+=Bracket)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Tournament'
		public Keyword getTournamentKeyword_0() { return cTournamentKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('tournamentType' tournamentType=TournamentType)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'tournamentType'
		public Keyword getTournamentTypeKeyword_3_0() { return cTournamentTypeKeyword_3_0; }
		
		//tournamentType=TournamentType
		public Assignment getTournamentTypeAssignment_3_1() { return cTournamentTypeAssignment_3_1; }
		
		//TournamentType
		public RuleCall getTournamentTypeTournamentTypeEnumRuleCall_3_1_0() { return cTournamentTypeTournamentTypeEnumRuleCall_3_1_0; }
		
		//('teams' '{' teams+=Team ( "," teams+=Team)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'teams'
		public Keyword getTeamsKeyword_4_0() { return cTeamsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//teams+=Team
		public Assignment getTeamsAssignment_4_2() { return cTeamsAssignment_4_2; }
		
		//Team
		public RuleCall getTeamsTeamParserRuleCall_4_2_0() { return cTeamsTeamParserRuleCall_4_2_0; }
		
		//( "," teams+=Team)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//teams+=Team
		public Assignment getTeamsAssignment_4_3_1() { return cTeamsAssignment_4_3_1; }
		
		//Team
		public RuleCall getTeamsTeamParserRuleCall_4_3_1_0() { return cTeamsTeamParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'tournamentformat'
		public Keyword getTournamentformatKeyword_5() { return cTournamentformatKeyword_5; }
		
		//tournamentformat=TournamentFormat
		public Assignment getTournamentformatAssignment_6() { return cTournamentformatAssignment_6; }
		
		//TournamentFormat
		public RuleCall getTournamentformatTournamentFormatParserRuleCall_6_0() { return cTournamentformatTournamentFormatParserRuleCall_6_0; }
		
		//'brackets'
		public Keyword getBracketsKeyword_7() { return cBracketsKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//brackets+=Bracket
		public Assignment getBracketsAssignment_9() { return cBracketsAssignment_9; }
		
		//Bracket
		public RuleCall getBracketsBracketParserRuleCall_9_0() { return cBracketsBracketParserRuleCall_9_0; }
		
		//( "," brackets+=Bracket)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//brackets+=Bracket
		public Assignment getBracketsAssignment_10_1() { return cBracketsAssignment_10_1; }
		
		//Bracket
		public RuleCall getBracketsBracketParserRuleCall_10_1_0() { return cBracketsBracketParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class TournamentFormatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TournamentFormat");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLeagueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRoundRobinParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cKnockoutParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//TournamentFormat returns TournamentFormat:
		//    League | RoundRobin | Knockout;
		@Override public ParserRule getRule() { return rule; }
		
		//League | RoundRobin | Knockout
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//League
		public RuleCall getLeagueParserRuleCall_0() { return cLeagueParserRuleCall_0; }
		
		//RoundRobin
		public RuleCall getRoundRobinParserRuleCall_1() { return cRoundRobinParserRuleCall_1; }
		
		//Knockout
		public RuleCall getKnockoutParserRuleCall_2() { return cKnockoutParserRuleCall_2; }
	}
	public class PlayerStatisticsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.PlayerStatistics");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefenderParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGoalkeeperParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAttackerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//PlayerStatistics returns PlayerStatistics:
		//    Defender | Goalkeeper | Attacker;
		@Override public ParserRule getRule() { return rule; }
		
		//Defender | Goalkeeper | Attacker
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Defender
		public RuleCall getDefenderParserRuleCall_0() { return cDefenderParserRuleCall_0; }
		
		//Goalkeeper
		public RuleCall getGoalkeeperParserRuleCall_1() { return cGoalkeeperParserRuleCall_1; }
		
		//Attacker
		public RuleCall getAttackerParserRuleCall_2() { return cAttackerParserRuleCall_2; }
	}
	public class MatchRulesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MatchRules");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStandardParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExtraTimeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPenaltyShootoutParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGroupStageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//MatchRules returns MatchRules:
		//    Standard | ExtraTime | PenaltyShootout | GroupStage;
		@Override public ParserRule getRule() { return rule; }
		
		//Standard | ExtraTime | PenaltyShootout | GroupStage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Standard
		public RuleCall getStandardParserRuleCall_0() { return cStandardParserRuleCall_0; }
		
		//ExtraTime
		public RuleCall getExtraTimeParserRuleCall_1() { return cExtraTimeParserRuleCall_1; }
		
		//PenaltyShootout
		public RuleCall getPenaltyShootoutParserRuleCall_2() { return cPenaltyShootoutParserRuleCall_2; }
		
		//GroupStage
		public RuleCall getGroupStageParserRuleCall_3() { return cGroupStageParserRuleCall_3; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class TeamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Team");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTeamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTeamSizeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTeamSizeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTeamSizeEIntParserRuleCall_3_1_0 = (RuleCall)cTeamSizeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManagerNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManagerNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManagerNameEStringParserRuleCall_4_1_0 = (RuleCall)cManagerNameAssignment_4_1.eContents().get(0);
		private final Keyword cPlayersKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPlayersAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPlayersPlayerParserRuleCall_7_0 = (RuleCall)cPlayersAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPlayersAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPlayersPlayerParserRuleCall_8_1_0 = (RuleCall)cPlayersAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Team returns Team:
		//    'Team'
		//    name=EString
		//    '{'
		//        ('teamSize' teamSize=EInt)?
		//        ('managerName' managerName=EString)?
		//        'players' '{' players+=Player ( "," players+=Player)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Team'
		//name=EString
		//'{'
		//    ('teamSize' teamSize=EInt)?
		//    ('managerName' managerName=EString)?
		//    'players' '{' players+=Player ( "," players+=Player)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Team'
		public Keyword getTeamKeyword_0() { return cTeamKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('teamSize' teamSize=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'teamSize'
		public Keyword getTeamSizeKeyword_3_0() { return cTeamSizeKeyword_3_0; }
		
		//teamSize=EInt
		public Assignment getTeamSizeAssignment_3_1() { return cTeamSizeAssignment_3_1; }
		
		//EInt
		public RuleCall getTeamSizeEIntParserRuleCall_3_1_0() { return cTeamSizeEIntParserRuleCall_3_1_0; }
		
		//('managerName' managerName=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'managerName'
		public Keyword getManagerNameKeyword_4_0() { return cManagerNameKeyword_4_0; }
		
		//managerName=EString
		public Assignment getManagerNameAssignment_4_1() { return cManagerNameAssignment_4_1; }
		
		//EString
		public RuleCall getManagerNameEStringParserRuleCall_4_1_0() { return cManagerNameEStringParserRuleCall_4_1_0; }
		
		//'players'
		public Keyword getPlayersKeyword_5() { return cPlayersKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//players+=Player
		public Assignment getPlayersAssignment_7() { return cPlayersAssignment_7; }
		
		//Player
		public RuleCall getPlayersPlayerParserRuleCall_7_0() { return cPlayersPlayerParserRuleCall_7_0; }
		
		//( "," players+=Player)*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//players+=Player
		public Assignment getPlayersAssignment_8_1() { return cPlayersAssignment_8_1; }
		
		//Player
		public RuleCall getPlayersPlayerParserRuleCall_8_1_0() { return cPlayersPlayerParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class BracketElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Bracket");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cRoundsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cRoundsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cRoundsEIntParserRuleCall_2_1_0 = (RuleCall)cRoundsAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBracketSideKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBracketSideAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBracketSideBracketSideEnumRuleCall_3_1_0 = (RuleCall)cBracketSideAssignment_3_1.eContents().get(0);
		private final Keyword cMatchesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMatchesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMatchesMatchParserRuleCall_6_0 = (RuleCall)cMatchesAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMatchesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMatchesMatchParserRuleCall_7_1_0 = (RuleCall)cMatchesAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Bracket returns Bracket:
		//    'Bracket'
		//    '{'
		//        ('rounds' rounds=EInt)?
		//        ('bracketSide' bracketSide=BracketSide)
		//        'matches' '{' matches+=Match ( "," matches+=Match)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Bracket'
		//'{'
		//    ('rounds' rounds=EInt)?
		//    ('bracketSide' bracketSide=BracketSide)
		//    'matches' '{' matches+=Match ( "," matches+=Match)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Bracket'
		public Keyword getBracketKeyword_0() { return cBracketKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('rounds' rounds=EInt)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'rounds'
		public Keyword getRoundsKeyword_2_0() { return cRoundsKeyword_2_0; }
		
		//rounds=EInt
		public Assignment getRoundsAssignment_2_1() { return cRoundsAssignment_2_1; }
		
		//EInt
		public RuleCall getRoundsEIntParserRuleCall_2_1_0() { return cRoundsEIntParserRuleCall_2_1_0; }
		
		//('bracketSide' bracketSide=BracketSide)
		public Group getGroup_3() { return cGroup_3; }
		
		//'bracketSide'
		public Keyword getBracketSideKeyword_3_0() { return cBracketSideKeyword_3_0; }
		
		//bracketSide=BracketSide
		public Assignment getBracketSideAssignment_3_1() { return cBracketSideAssignment_3_1; }
		
		//BracketSide
		public RuleCall getBracketSideBracketSideEnumRuleCall_3_1_0() { return cBracketSideBracketSideEnumRuleCall_3_1_0; }
		
		//'matches'
		public Keyword getMatchesKeyword_4() { return cMatchesKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//matches+=Match
		public Assignment getMatchesAssignment_6() { return cMatchesAssignment_6; }
		
		//Match
		public RuleCall getMatchesMatchParserRuleCall_6_0() { return cMatchesMatchParserRuleCall_6_0; }
		
		//( "," matches+=Match)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//matches+=Match
		public Assignment getMatchesAssignment_7_1() { return cMatchesAssignment_7_1; }
		
		//Match
		public RuleCall getMatchesMatchParserRuleCall_7_1_0() { return cMatchesMatchParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class PlayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Player");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlayerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPositionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPositionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPositionPlayerPositionEnumRuleCall_3_1_0 = (RuleCall)cPositionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBirthDateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBirthDateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBirthDateEDateParserRuleCall_4_1_0 = (RuleCall)cBirthDateAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNumberKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNumberAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNumberEIntParserRuleCall_5_1_0 = (RuleCall)cNumberAssignment_5_1.eContents().get(0);
		private final Keyword cPlayerstatisticsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPlayerstatisticsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPlayerstatisticsPlayerStatisticsParserRuleCall_7_0 = (RuleCall)cPlayerstatisticsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Player returns Player:
		//    'Player'
		//    name=EString
		//    '{'
		//        ('position' position=PlayerPosition)
		//        ('birthDate' birthDate=EDate)?
		//        ('number' number=EInt)
		//        'playerstatistics' playerstatistics=PlayerStatistics
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Player'
		//name=EString
		//'{'
		//    ('position' position=PlayerPosition)
		//    ('birthDate' birthDate=EDate)?
		//    ('number' number=EInt)
		//    'playerstatistics' playerstatistics=PlayerStatistics
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Player'
		public Keyword getPlayerKeyword_0() { return cPlayerKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('position' position=PlayerPosition)
		public Group getGroup_3() { return cGroup_3; }
		
		//'position'
		public Keyword getPositionKeyword_3_0() { return cPositionKeyword_3_0; }
		
		//position=PlayerPosition
		public Assignment getPositionAssignment_3_1() { return cPositionAssignment_3_1; }
		
		//PlayerPosition
		public RuleCall getPositionPlayerPositionEnumRuleCall_3_1_0() { return cPositionPlayerPositionEnumRuleCall_3_1_0; }
		
		//('birthDate' birthDate=EDate)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'birthDate'
		public Keyword getBirthDateKeyword_4_0() { return cBirthDateKeyword_4_0; }
		
		//birthDate=EDate
		public Assignment getBirthDateAssignment_4_1() { return cBirthDateAssignment_4_1; }
		
		//EDate
		public RuleCall getBirthDateEDateParserRuleCall_4_1_0() { return cBirthDateEDateParserRuleCall_4_1_0; }
		
		//('number' number=EInt)
		public Group getGroup_5() { return cGroup_5; }
		
		//'number'
		public Keyword getNumberKeyword_5_0() { return cNumberKeyword_5_0; }
		
		//number=EInt
		public Assignment getNumberAssignment_5_1() { return cNumberAssignment_5_1; }
		
		//EInt
		public RuleCall getNumberEIntParserRuleCall_5_1_0() { return cNumberEIntParserRuleCall_5_1_0; }
		
		//'playerstatistics'
		public Keyword getPlayerstatisticsKeyword_6() { return cPlayerstatisticsKeyword_6; }
		
		//playerstatistics=PlayerStatistics
		public Assignment getPlayerstatisticsAssignment_7() { return cPlayerstatisticsAssignment_7; }
		
		//PlayerStatistics
		public RuleCall getPlayerstatisticsPlayerStatisticsParserRuleCall_7_0() { return cPlayerstatisticsPlayerStatisticsParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EDate");
		private final RuleCall cDATETerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EDate returns ecore::EDate:
		//    DATE;
		@Override public ParserRule getRule() { return rule; }
		
		//DATE
		public RuleCall getDATETerminalRuleCall() { return cDATETerminalRuleCall; }
	}
	public class DefenderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Defender");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDefenderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDefenderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cGoalsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGoalsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGoalsEIntParserRuleCall_3_1_0 = (RuleCall)cGoalsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAssistsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAssistsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAssistsEIntParserRuleCall_4_1_0 = (RuleCall)cAssistsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cFoulsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cFoulsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cFoulsEIntParserRuleCall_5_1_0 = (RuleCall)cFoulsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cYellowCardsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cYellowCardsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cYellowCardsEIntParserRuleCall_6_1_0 = (RuleCall)cYellowCardsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cRedCardsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cRedCardsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cRedCardsEIntParserRuleCall_7_1_0 = (RuleCall)cRedCardsAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCleansheetsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cCleansheetsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cCleansheetsEIntParserRuleCall_8_1_0 = (RuleCall)cCleansheetsAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Defender returns Defender:
		//    {Defender}
		//    'Defender'
		//    '{'
		//        ('goals' goals=EInt)?
		//        ('assists' assists=EInt)?
		//        ('fouls' fouls=EInt)?
		//        ('yellowCards' yellowCards=EInt)?
		//        ('redCards' redCards=EInt)?
		//        ('cleansheets' cleansheets=EInt)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Defender}
		//'Defender'
		//'{'
		//    ('goals' goals=EInt)?
		//    ('assists' assists=EInt)?
		//    ('fouls' fouls=EInt)?
		//    ('yellowCards' yellowCards=EInt)?
		//    ('redCards' redCards=EInt)?
		//    ('cleansheets' cleansheets=EInt)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Defender}
		public Action getDefenderAction_0() { return cDefenderAction_0; }
		
		//'Defender'
		public Keyword getDefenderKeyword_1() { return cDefenderKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('goals' goals=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'goals'
		public Keyword getGoalsKeyword_3_0() { return cGoalsKeyword_3_0; }
		
		//goals=EInt
		public Assignment getGoalsAssignment_3_1() { return cGoalsAssignment_3_1; }
		
		//EInt
		public RuleCall getGoalsEIntParserRuleCall_3_1_0() { return cGoalsEIntParserRuleCall_3_1_0; }
		
		//('assists' assists=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'assists'
		public Keyword getAssistsKeyword_4_0() { return cAssistsKeyword_4_0; }
		
		//assists=EInt
		public Assignment getAssistsAssignment_4_1() { return cAssistsAssignment_4_1; }
		
		//EInt
		public RuleCall getAssistsEIntParserRuleCall_4_1_0() { return cAssistsEIntParserRuleCall_4_1_0; }
		
		//('fouls' fouls=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'fouls'
		public Keyword getFoulsKeyword_5_0() { return cFoulsKeyword_5_0; }
		
		//fouls=EInt
		public Assignment getFoulsAssignment_5_1() { return cFoulsAssignment_5_1; }
		
		//EInt
		public RuleCall getFoulsEIntParserRuleCall_5_1_0() { return cFoulsEIntParserRuleCall_5_1_0; }
		
		//('yellowCards' yellowCards=EInt)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'yellowCards'
		public Keyword getYellowCardsKeyword_6_0() { return cYellowCardsKeyword_6_0; }
		
		//yellowCards=EInt
		public Assignment getYellowCardsAssignment_6_1() { return cYellowCardsAssignment_6_1; }
		
		//EInt
		public RuleCall getYellowCardsEIntParserRuleCall_6_1_0() { return cYellowCardsEIntParserRuleCall_6_1_0; }
		
		//('redCards' redCards=EInt)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'redCards'
		public Keyword getRedCardsKeyword_7_0() { return cRedCardsKeyword_7_0; }
		
		//redCards=EInt
		public Assignment getRedCardsAssignment_7_1() { return cRedCardsAssignment_7_1; }
		
		//EInt
		public RuleCall getRedCardsEIntParserRuleCall_7_1_0() { return cRedCardsEIntParserRuleCall_7_1_0; }
		
		//('cleansheets' cleansheets=EInt)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'cleansheets'
		public Keyword getCleansheetsKeyword_8_0() { return cCleansheetsKeyword_8_0; }
		
		//cleansheets=EInt
		public Assignment getCleansheetsAssignment_8_1() { return cCleansheetsAssignment_8_1; }
		
		//EInt
		public RuleCall getCleansheetsEIntParserRuleCall_8_1_0() { return cCleansheetsEIntParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class GoalkeeperElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Goalkeeper");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGoalkeeperAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGoalkeeperKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cGoalsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGoalsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGoalsEIntParserRuleCall_3_1_0 = (RuleCall)cGoalsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAssistsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAssistsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAssistsEIntParserRuleCall_4_1_0 = (RuleCall)cAssistsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cFoulsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cFoulsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cFoulsEIntParserRuleCall_5_1_0 = (RuleCall)cFoulsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cYellowCardsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cYellowCardsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cYellowCardsEIntParserRuleCall_6_1_0 = (RuleCall)cYellowCardsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cRedCardsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cRedCardsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cRedCardsEIntParserRuleCall_7_1_0 = (RuleCall)cRedCardsAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCleansheetsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cCleansheetsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cCleansheetsEIntParserRuleCall_8_1_0 = (RuleCall)cCleansheetsAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cSavesKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cSavesAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cSavesEIntParserRuleCall_9_1_0 = (RuleCall)cSavesAssignment_9_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Goalkeeper returns Goalkeeper:
		//    {Goalkeeper}
		//    'Goalkeeper'
		//    '{'
		//        ('goals' goals=EInt)?
		//        ('assists' assists=EInt)?
		//        ('fouls' fouls=EInt)?
		//        ('yellowCards' yellowCards=EInt)?
		//        ('redCards' redCards=EInt)?
		//        ('cleansheets' cleansheets=EInt)?
		//        ('saves' saves=EInt)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Goalkeeper}
		//'Goalkeeper'
		//'{'
		//    ('goals' goals=EInt)?
		//    ('assists' assists=EInt)?
		//    ('fouls' fouls=EInt)?
		//    ('yellowCards' yellowCards=EInt)?
		//    ('redCards' redCards=EInt)?
		//    ('cleansheets' cleansheets=EInt)?
		//    ('saves' saves=EInt)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Goalkeeper}
		public Action getGoalkeeperAction_0() { return cGoalkeeperAction_0; }
		
		//'Goalkeeper'
		public Keyword getGoalkeeperKeyword_1() { return cGoalkeeperKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('goals' goals=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'goals'
		public Keyword getGoalsKeyword_3_0() { return cGoalsKeyword_3_0; }
		
		//goals=EInt
		public Assignment getGoalsAssignment_3_1() { return cGoalsAssignment_3_1; }
		
		//EInt
		public RuleCall getGoalsEIntParserRuleCall_3_1_0() { return cGoalsEIntParserRuleCall_3_1_0; }
		
		//('assists' assists=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'assists'
		public Keyword getAssistsKeyword_4_0() { return cAssistsKeyword_4_0; }
		
		//assists=EInt
		public Assignment getAssistsAssignment_4_1() { return cAssistsAssignment_4_1; }
		
		//EInt
		public RuleCall getAssistsEIntParserRuleCall_4_1_0() { return cAssistsEIntParserRuleCall_4_1_0; }
		
		//('fouls' fouls=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'fouls'
		public Keyword getFoulsKeyword_5_0() { return cFoulsKeyword_5_0; }
		
		//fouls=EInt
		public Assignment getFoulsAssignment_5_1() { return cFoulsAssignment_5_1; }
		
		//EInt
		public RuleCall getFoulsEIntParserRuleCall_5_1_0() { return cFoulsEIntParserRuleCall_5_1_0; }
		
		//('yellowCards' yellowCards=EInt)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'yellowCards'
		public Keyword getYellowCardsKeyword_6_0() { return cYellowCardsKeyword_6_0; }
		
		//yellowCards=EInt
		public Assignment getYellowCardsAssignment_6_1() { return cYellowCardsAssignment_6_1; }
		
		//EInt
		public RuleCall getYellowCardsEIntParserRuleCall_6_1_0() { return cYellowCardsEIntParserRuleCall_6_1_0; }
		
		//('redCards' redCards=EInt)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'redCards'
		public Keyword getRedCardsKeyword_7_0() { return cRedCardsKeyword_7_0; }
		
		//redCards=EInt
		public Assignment getRedCardsAssignment_7_1() { return cRedCardsAssignment_7_1; }
		
		//EInt
		public RuleCall getRedCardsEIntParserRuleCall_7_1_0() { return cRedCardsEIntParserRuleCall_7_1_0; }
		
		//('cleansheets' cleansheets=EInt)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'cleansheets'
		public Keyword getCleansheetsKeyword_8_0() { return cCleansheetsKeyword_8_0; }
		
		//cleansheets=EInt
		public Assignment getCleansheetsAssignment_8_1() { return cCleansheetsAssignment_8_1; }
		
		//EInt
		public RuleCall getCleansheetsEIntParserRuleCall_8_1_0() { return cCleansheetsEIntParserRuleCall_8_1_0; }
		
		//('saves' saves=EInt)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'saves'
		public Keyword getSavesKeyword_9_0() { return cSavesKeyword_9_0; }
		
		//saves=EInt
		public Assignment getSavesAssignment_9_1() { return cSavesAssignment_9_1; }
		
		//EInt
		public RuleCall getSavesEIntParserRuleCall_9_1_0() { return cSavesEIntParserRuleCall_9_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class AttackerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Attacker");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttackerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAttackerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cGoalsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGoalsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGoalsEIntParserRuleCall_3_1_0 = (RuleCall)cGoalsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAssistsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAssistsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAssistsEIntParserRuleCall_4_1_0 = (RuleCall)cAssistsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cFoulsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cFoulsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cFoulsEIntParserRuleCall_5_1_0 = (RuleCall)cFoulsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cYellowCardsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cYellowCardsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cYellowCardsEIntParserRuleCall_6_1_0 = (RuleCall)cYellowCardsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cRedCardsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cRedCardsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cRedCardsEIntParserRuleCall_7_1_0 = (RuleCall)cRedCardsAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cSprintSpeedKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cSprintSpeedAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cSprintSpeedEIntParserRuleCall_8_1_0 = (RuleCall)cSprintSpeedAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Attacker returns Attacker:
		//    {Attacker}
		//    'Attacker'
		//    '{'
		//        ('goals' goals=EInt)?
		//        ('assists' assists=EInt)?
		//        ('fouls' fouls=EInt)?
		//        ('yellowCards' yellowCards=EInt)?
		//        ('redCards' redCards=EInt)?
		//        ('sprintSpeed' sprintSpeed=EInt)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Attacker}
		//'Attacker'
		//'{'
		//    ('goals' goals=EInt)?
		//    ('assists' assists=EInt)?
		//    ('fouls' fouls=EInt)?
		//    ('yellowCards' yellowCards=EInt)?
		//    ('redCards' redCards=EInt)?
		//    ('sprintSpeed' sprintSpeed=EInt)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Attacker}
		public Action getAttackerAction_0() { return cAttackerAction_0; }
		
		//'Attacker'
		public Keyword getAttackerKeyword_1() { return cAttackerKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('goals' goals=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'goals'
		public Keyword getGoalsKeyword_3_0() { return cGoalsKeyword_3_0; }
		
		//goals=EInt
		public Assignment getGoalsAssignment_3_1() { return cGoalsAssignment_3_1; }
		
		//EInt
		public RuleCall getGoalsEIntParserRuleCall_3_1_0() { return cGoalsEIntParserRuleCall_3_1_0; }
		
		//('assists' assists=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'assists'
		public Keyword getAssistsKeyword_4_0() { return cAssistsKeyword_4_0; }
		
		//assists=EInt
		public Assignment getAssistsAssignment_4_1() { return cAssistsAssignment_4_1; }
		
		//EInt
		public RuleCall getAssistsEIntParserRuleCall_4_1_0() { return cAssistsEIntParserRuleCall_4_1_0; }
		
		//('fouls' fouls=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'fouls'
		public Keyword getFoulsKeyword_5_0() { return cFoulsKeyword_5_0; }
		
		//fouls=EInt
		public Assignment getFoulsAssignment_5_1() { return cFoulsAssignment_5_1; }
		
		//EInt
		public RuleCall getFoulsEIntParserRuleCall_5_1_0() { return cFoulsEIntParserRuleCall_5_1_0; }
		
		//('yellowCards' yellowCards=EInt)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'yellowCards'
		public Keyword getYellowCardsKeyword_6_0() { return cYellowCardsKeyword_6_0; }
		
		//yellowCards=EInt
		public Assignment getYellowCardsAssignment_6_1() { return cYellowCardsAssignment_6_1; }
		
		//EInt
		public RuleCall getYellowCardsEIntParserRuleCall_6_1_0() { return cYellowCardsEIntParserRuleCall_6_1_0; }
		
		//('redCards' redCards=EInt)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'redCards'
		public Keyword getRedCardsKeyword_7_0() { return cRedCardsKeyword_7_0; }
		
		//redCards=EInt
		public Assignment getRedCardsAssignment_7_1() { return cRedCardsAssignment_7_1; }
		
		//EInt
		public RuleCall getRedCardsEIntParserRuleCall_7_1_0() { return cRedCardsEIntParserRuleCall_7_1_0; }
		
		//('sprintSpeed' sprintSpeed=EInt)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'sprintSpeed'
		public Keyword getSprintSpeedKeyword_8_0() { return cSprintSpeedKeyword_8_0; }
		
		//sprintSpeed=EInt
		public Assignment getSprintSpeedAssignment_8_1() { return cSprintSpeedAssignment_8_1; }
		
		//EInt
		public RuleCall getSprintSpeedEIntParserRuleCall_8_1_0() { return cSprintSpeedEIntParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class LeagueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.League");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLeagueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeagueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMaxTeamsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMaxTeamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMaxTeamsEIntParserRuleCall_4_1_0 = (RuleCall)cMaxTeamsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMinTeamsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMinTeamsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMinTeamsEIntParserRuleCall_5_1_0 = (RuleCall)cMinTeamsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_6_1_0 = (RuleCall)cDescriptionAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cNumberOfRoundsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cNumberOfRoundsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cNumberOfRoundsEIntParserRuleCall_7_1_0 = (RuleCall)cNumberOfRoundsAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cFinalsFormatKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cFinalsFormatAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cFinalsFormatFinalsFormatEnumRuleCall_8_1_0 = (RuleCall)cFinalsFormatAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//League returns League:
		//    {League}
		//    'League'
		//    name=EString
		//    '{'
		//        ('maxTeams' maxTeams=EInt)
		//        ('minTeams' minTeams=EInt)
		//        ('description' description=EString)?
		//        ('numberOfRounds' numberOfRounds=EInt)?
		//        ('finalsFormat' finalsFormat=FinalsFormat)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{League}
		//'League'
		//name=EString
		//'{'
		//    ('maxTeams' maxTeams=EInt)
		//    ('minTeams' minTeams=EInt)
		//    ('description' description=EString)?
		//    ('numberOfRounds' numberOfRounds=EInt)?
		//    ('finalsFormat' finalsFormat=FinalsFormat)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{League}
		public Action getLeagueAction_0() { return cLeagueAction_0; }
		
		//'League'
		public Keyword getLeagueKeyword_1() { return cLeagueKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('maxTeams' maxTeams=EInt)
		public Group getGroup_4() { return cGroup_4; }
		
		//'maxTeams'
		public Keyword getMaxTeamsKeyword_4_0() { return cMaxTeamsKeyword_4_0; }
		
		//maxTeams=EInt
		public Assignment getMaxTeamsAssignment_4_1() { return cMaxTeamsAssignment_4_1; }
		
		//EInt
		public RuleCall getMaxTeamsEIntParserRuleCall_4_1_0() { return cMaxTeamsEIntParserRuleCall_4_1_0; }
		
		//('minTeams' minTeams=EInt)
		public Group getGroup_5() { return cGroup_5; }
		
		//'minTeams'
		public Keyword getMinTeamsKeyword_5_0() { return cMinTeamsKeyword_5_0; }
		
		//minTeams=EInt
		public Assignment getMinTeamsAssignment_5_1() { return cMinTeamsAssignment_5_1; }
		
		//EInt
		public RuleCall getMinTeamsEIntParserRuleCall_5_1_0() { return cMinTeamsEIntParserRuleCall_5_1_0; }
		
		//('description' description=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_6_1() { return cDescriptionAssignment_6_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_6_1_0() { return cDescriptionEStringParserRuleCall_6_1_0; }
		
		//('numberOfRounds' numberOfRounds=EInt)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'numberOfRounds'
		public Keyword getNumberOfRoundsKeyword_7_0() { return cNumberOfRoundsKeyword_7_0; }
		
		//numberOfRounds=EInt
		public Assignment getNumberOfRoundsAssignment_7_1() { return cNumberOfRoundsAssignment_7_1; }
		
		//EInt
		public RuleCall getNumberOfRoundsEIntParserRuleCall_7_1_0() { return cNumberOfRoundsEIntParserRuleCall_7_1_0; }
		
		//('finalsFormat' finalsFormat=FinalsFormat)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'finalsFormat'
		public Keyword getFinalsFormatKeyword_8_0() { return cFinalsFormatKeyword_8_0; }
		
		//finalsFormat=FinalsFormat
		public Assignment getFinalsFormatAssignment_8_1() { return cFinalsFormatAssignment_8_1; }
		
		//FinalsFormat
		public RuleCall getFinalsFormatFinalsFormatEnumRuleCall_8_1_0() { return cFinalsFormatFinalsFormatEnumRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class RoundRobinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.RoundRobin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRoundRobinAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRoundRobinKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMaxTeamsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMaxTeamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMaxTeamsEIntParserRuleCall_4_1_0 = (RuleCall)cMaxTeamsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMinTeamsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMinTeamsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMinTeamsEIntParserRuleCall_5_1_0 = (RuleCall)cMinTeamsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_6_1_0 = (RuleCall)cDescriptionAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPointsForWinKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPointsForWinAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPointsForWinEIntParserRuleCall_7_1_0 = (RuleCall)cPointsForWinAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPointsForDrawKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPointsForDrawAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPointsForDrawEIntParserRuleCall_8_1_0 = (RuleCall)cPointsForDrawAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPointsForLossKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cPointsForLossAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cPointsForLossEIntParserRuleCall_9_1_0 = (RuleCall)cPointsForLossAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cNumberOfRoundsKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cNumberOfRoundsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cNumberOfRoundsEIntParserRuleCall_10_1_0 = (RuleCall)cNumberOfRoundsAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cTieBreakerRuleKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cTieBreakerRuleAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cTieBreakerRuleTieBreakerRuleEnumRuleCall_11_1_0 = (RuleCall)cTieBreakerRuleAssignment_11_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//RoundRobin returns RoundRobin:
		//    {RoundRobin}
		//    'RoundRobin'
		//    name=EString
		//    '{'
		//        ('maxTeams' maxTeams=EInt)
		//        ('minTeams' minTeams=EInt)
		//        ('description' description=EString)?
		//        ('pointsForWin' pointsForWin=EInt)
		//        ('pointsForDraw' pointsForDraw=EInt)
		//        ('pointsForLoss' pointsForLoss=EInt)
		//        ('numberOfRounds' numberOfRounds=EInt)
		//        ('tieBreakerRule' tieBreakerRule=TieBreakerRule)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{RoundRobin}
		//'RoundRobin'
		//name=EString
		//'{'
		//    ('maxTeams' maxTeams=EInt)
		//    ('minTeams' minTeams=EInt)
		//    ('description' description=EString)?
		//    ('pointsForWin' pointsForWin=EInt)
		//    ('pointsForDraw' pointsForDraw=EInt)
		//    ('pointsForLoss' pointsForLoss=EInt)
		//    ('numberOfRounds' numberOfRounds=EInt)
		//    ('tieBreakerRule' tieBreakerRule=TieBreakerRule)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{RoundRobin}
		public Action getRoundRobinAction_0() { return cRoundRobinAction_0; }
		
		//'RoundRobin'
		public Keyword getRoundRobinKeyword_1() { return cRoundRobinKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('maxTeams' maxTeams=EInt)
		public Group getGroup_4() { return cGroup_4; }
		
		//'maxTeams'
		public Keyword getMaxTeamsKeyword_4_0() { return cMaxTeamsKeyword_4_0; }
		
		//maxTeams=EInt
		public Assignment getMaxTeamsAssignment_4_1() { return cMaxTeamsAssignment_4_1; }
		
		//EInt
		public RuleCall getMaxTeamsEIntParserRuleCall_4_1_0() { return cMaxTeamsEIntParserRuleCall_4_1_0; }
		
		//('minTeams' minTeams=EInt)
		public Group getGroup_5() { return cGroup_5; }
		
		//'minTeams'
		public Keyword getMinTeamsKeyword_5_0() { return cMinTeamsKeyword_5_0; }
		
		//minTeams=EInt
		public Assignment getMinTeamsAssignment_5_1() { return cMinTeamsAssignment_5_1; }
		
		//EInt
		public RuleCall getMinTeamsEIntParserRuleCall_5_1_0() { return cMinTeamsEIntParserRuleCall_5_1_0; }
		
		//('description' description=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_6_1() { return cDescriptionAssignment_6_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_6_1_0() { return cDescriptionEStringParserRuleCall_6_1_0; }
		
		//('pointsForWin' pointsForWin=EInt)
		public Group getGroup_7() { return cGroup_7; }
		
		//'pointsForWin'
		public Keyword getPointsForWinKeyword_7_0() { return cPointsForWinKeyword_7_0; }
		
		//pointsForWin=EInt
		public Assignment getPointsForWinAssignment_7_1() { return cPointsForWinAssignment_7_1; }
		
		//EInt
		public RuleCall getPointsForWinEIntParserRuleCall_7_1_0() { return cPointsForWinEIntParserRuleCall_7_1_0; }
		
		//('pointsForDraw' pointsForDraw=EInt)
		public Group getGroup_8() { return cGroup_8; }
		
		//'pointsForDraw'
		public Keyword getPointsForDrawKeyword_8_0() { return cPointsForDrawKeyword_8_0; }
		
		//pointsForDraw=EInt
		public Assignment getPointsForDrawAssignment_8_1() { return cPointsForDrawAssignment_8_1; }
		
		//EInt
		public RuleCall getPointsForDrawEIntParserRuleCall_8_1_0() { return cPointsForDrawEIntParserRuleCall_8_1_0; }
		
		//('pointsForLoss' pointsForLoss=EInt)
		public Group getGroup_9() { return cGroup_9; }
		
		//'pointsForLoss'
		public Keyword getPointsForLossKeyword_9_0() { return cPointsForLossKeyword_9_0; }
		
		//pointsForLoss=EInt
		public Assignment getPointsForLossAssignment_9_1() { return cPointsForLossAssignment_9_1; }
		
		//EInt
		public RuleCall getPointsForLossEIntParserRuleCall_9_1_0() { return cPointsForLossEIntParserRuleCall_9_1_0; }
		
		//('numberOfRounds' numberOfRounds=EInt)
		public Group getGroup_10() { return cGroup_10; }
		
		//'numberOfRounds'
		public Keyword getNumberOfRoundsKeyword_10_0() { return cNumberOfRoundsKeyword_10_0; }
		
		//numberOfRounds=EInt
		public Assignment getNumberOfRoundsAssignment_10_1() { return cNumberOfRoundsAssignment_10_1; }
		
		//EInt
		public RuleCall getNumberOfRoundsEIntParserRuleCall_10_1_0() { return cNumberOfRoundsEIntParserRuleCall_10_1_0; }
		
		//('tieBreakerRule' tieBreakerRule=TieBreakerRule)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'tieBreakerRule'
		public Keyword getTieBreakerRuleKeyword_11_0() { return cTieBreakerRuleKeyword_11_0; }
		
		//tieBreakerRule=TieBreakerRule
		public Assignment getTieBreakerRuleAssignment_11_1() { return cTieBreakerRuleAssignment_11_1; }
		
		//TieBreakerRule
		public RuleCall getTieBreakerRuleTieBreakerRuleEnumRuleCall_11_1_0() { return cTieBreakerRuleTieBreakerRuleEnumRuleCall_11_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class KnockoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Knockout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKnockoutAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cHasThirdPlacePlayoffAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cHasThirdPlacePlayoffHasThirdPlacePlayoffKeyword_1_0 = (Keyword)cHasThirdPlacePlayoffAssignment_1.eContents().get(0);
		private final Keyword cKnockoutKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMaxTeamsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMaxTeamsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMaxTeamsEIntParserRuleCall_5_1_0 = (RuleCall)cMaxTeamsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMinTeamsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMinTeamsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMinTeamsEIntParserRuleCall_6_1_0 = (RuleCall)cMinTeamsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDescriptionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDescriptionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_7_1_0 = (RuleCall)cDescriptionAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cNumberOfRoundsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cNumberOfRoundsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cNumberOfRoundsEIntParserRuleCall_8_1_0 = (RuleCall)cNumberOfRoundsAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Knockout returns Knockout:
		//    {Knockout}
		//    (hasThirdPlacePlayoff?='hasThirdPlacePlayoff')?
		//    'Knockout'
		//    name=EString
		//    '{'
		//        ('maxTeams' maxTeams=EInt)
		//        ('minTeams' minTeams=EInt)
		//        ('description' description=EString)?
		//        ('numberOfRounds' numberOfRounds=EInt)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Knockout}
		//(hasThirdPlacePlayoff?='hasThirdPlacePlayoff')?
		//'Knockout'
		//name=EString
		//'{'
		//    ('maxTeams' maxTeams=EInt)
		//    ('minTeams' minTeams=EInt)
		//    ('description' description=EString)?
		//    ('numberOfRounds' numberOfRounds=EInt)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Knockout}
		public Action getKnockoutAction_0() { return cKnockoutAction_0; }
		
		//(hasThirdPlacePlayoff?='hasThirdPlacePlayoff')?
		public Assignment getHasThirdPlacePlayoffAssignment_1() { return cHasThirdPlacePlayoffAssignment_1; }
		
		//'hasThirdPlacePlayoff'
		public Keyword getHasThirdPlacePlayoffHasThirdPlacePlayoffKeyword_1_0() { return cHasThirdPlacePlayoffHasThirdPlacePlayoffKeyword_1_0; }
		
		//'Knockout'
		public Keyword getKnockoutKeyword_2() { return cKnockoutKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('maxTeams' maxTeams=EInt)
		public Group getGroup_5() { return cGroup_5; }
		
		//'maxTeams'
		public Keyword getMaxTeamsKeyword_5_0() { return cMaxTeamsKeyword_5_0; }
		
		//maxTeams=EInt
		public Assignment getMaxTeamsAssignment_5_1() { return cMaxTeamsAssignment_5_1; }
		
		//EInt
		public RuleCall getMaxTeamsEIntParserRuleCall_5_1_0() { return cMaxTeamsEIntParserRuleCall_5_1_0; }
		
		//('minTeams' minTeams=EInt)
		public Group getGroup_6() { return cGroup_6; }
		
		//'minTeams'
		public Keyword getMinTeamsKeyword_6_0() { return cMinTeamsKeyword_6_0; }
		
		//minTeams=EInt
		public Assignment getMinTeamsAssignment_6_1() { return cMinTeamsAssignment_6_1; }
		
		//EInt
		public RuleCall getMinTeamsEIntParserRuleCall_6_1_0() { return cMinTeamsEIntParserRuleCall_6_1_0; }
		
		//('description' description=EString)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'description'
		public Keyword getDescriptionKeyword_7_0() { return cDescriptionKeyword_7_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_7_1() { return cDescriptionAssignment_7_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_7_1_0() { return cDescriptionEStringParserRuleCall_7_1_0; }
		
		//('numberOfRounds' numberOfRounds=EInt)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'numberOfRounds'
		public Keyword getNumberOfRoundsKeyword_8_0() { return cNumberOfRoundsKeyword_8_0; }
		
		//numberOfRounds=EInt
		public Assignment getNumberOfRoundsAssignment_8_1() { return cNumberOfRoundsAssignment_8_1; }
		
		//EInt
		public RuleCall getNumberOfRoundsEIntParserRuleCall_8_1_0() { return cNumberOfRoundsEIntParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class MatchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Match");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cScoreTeam1Keyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cScoreTeam1Assignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cScoreTeam1EIntParserRuleCall_2_1_0 = (RuleCall)cScoreTeam1Assignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cScoreTeam2Keyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cScoreTeam2Assignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cScoreTeam2EIntParserRuleCall_3_1_0 = (RuleCall)cScoreTeam2Assignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMatchResultKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMatchResultAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMatchResultMatchResultEnumRuleCall_4_1_0 = (RuleCall)cMatchResultAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDayKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDayAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDayEDateParserRuleCall_5_1_0 = (RuleCall)cDayAssignment_5_1.eContents().get(0);
		private final Keyword cTeamsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTeamsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cTeamsTeamCrossReference_8_0 = (CrossReference)cTeamsAssignment_8.eContents().get(0);
		private final RuleCall cTeamsTeamEStringParserRuleCall_8_0_1 = (RuleCall)cTeamsTeamCrossReference_8_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cTeamsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cTeamsTeamCrossReference_9_1_0 = (CrossReference)cTeamsAssignment_9_1.eContents().get(0);
		private final RuleCall cTeamsTeamEStringParserRuleCall_9_1_0_1 = (RuleCall)cTeamsTeamCrossReference_9_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cMatchrulesKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cMatchrulesAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cMatchrulesMatchRulesParserRuleCall_12_0 = (RuleCall)cMatchrulesAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Match returns Match:
		//    'Match'
		//    '{'
		//        ('scoreTeam1' scoreTeam1=EInt)?
		//        ('scoreTeam2' scoreTeam2=EInt)?
		//        ('matchResult' matchResult=MatchResult)?
		//        ('day' day=EDate)
		//        'teams' '(' teams+=[Team|EString] ( "," teams+=[Team|EString])* ')'
		//        'matchrules' matchrules=MatchRules
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Match'
		//'{'
		//    ('scoreTeam1' scoreTeam1=EInt)?
		//    ('scoreTeam2' scoreTeam2=EInt)?
		//    ('matchResult' matchResult=MatchResult)?
		//    ('day' day=EDate)
		//    'teams' '(' teams+=[Team|EString] ( "," teams+=[Team|EString])* ')'
		//    'matchrules' matchrules=MatchRules
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Match'
		public Keyword getMatchKeyword_0() { return cMatchKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('scoreTeam1' scoreTeam1=EInt)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'scoreTeam1'
		public Keyword getScoreTeam1Keyword_2_0() { return cScoreTeam1Keyword_2_0; }
		
		//scoreTeam1=EInt
		public Assignment getScoreTeam1Assignment_2_1() { return cScoreTeam1Assignment_2_1; }
		
		//EInt
		public RuleCall getScoreTeam1EIntParserRuleCall_2_1_0() { return cScoreTeam1EIntParserRuleCall_2_1_0; }
		
		//('scoreTeam2' scoreTeam2=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'scoreTeam2'
		public Keyword getScoreTeam2Keyword_3_0() { return cScoreTeam2Keyword_3_0; }
		
		//scoreTeam2=EInt
		public Assignment getScoreTeam2Assignment_3_1() { return cScoreTeam2Assignment_3_1; }
		
		//EInt
		public RuleCall getScoreTeam2EIntParserRuleCall_3_1_0() { return cScoreTeam2EIntParserRuleCall_3_1_0; }
		
		//('matchResult' matchResult=MatchResult)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'matchResult'
		public Keyword getMatchResultKeyword_4_0() { return cMatchResultKeyword_4_0; }
		
		//matchResult=MatchResult
		public Assignment getMatchResultAssignment_4_1() { return cMatchResultAssignment_4_1; }
		
		//MatchResult
		public RuleCall getMatchResultMatchResultEnumRuleCall_4_1_0() { return cMatchResultMatchResultEnumRuleCall_4_1_0; }
		
		//('day' day=EDate)
		public Group getGroup_5() { return cGroup_5; }
		
		//'day'
		public Keyword getDayKeyword_5_0() { return cDayKeyword_5_0; }
		
		//day=EDate
		public Assignment getDayAssignment_5_1() { return cDayAssignment_5_1; }
		
		//EDate
		public RuleCall getDayEDateParserRuleCall_5_1_0() { return cDayEDateParserRuleCall_5_1_0; }
		
		//'teams'
		public Keyword getTeamsKeyword_6() { return cTeamsKeyword_6; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7() { return cLeftParenthesisKeyword_7; }
		
		//teams+=[Team|EString]
		public Assignment getTeamsAssignment_8() { return cTeamsAssignment_8; }
		
		//[Team|EString]
		public CrossReference getTeamsTeamCrossReference_8_0() { return cTeamsTeamCrossReference_8_0; }
		
		//EString
		public RuleCall getTeamsTeamEStringParserRuleCall_8_0_1() { return cTeamsTeamEStringParserRuleCall_8_0_1; }
		
		//( "," teams+=[Team|EString])*
		public Group getGroup_9() { return cGroup_9; }
		
		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//teams+=[Team|EString]
		public Assignment getTeamsAssignment_9_1() { return cTeamsAssignment_9_1; }
		
		//[Team|EString]
		public CrossReference getTeamsTeamCrossReference_9_1_0() { return cTeamsTeamCrossReference_9_1_0; }
		
		//EString
		public RuleCall getTeamsTeamEStringParserRuleCall_9_1_0_1() { return cTeamsTeamEStringParserRuleCall_9_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
		
		//'matchrules'
		public Keyword getMatchrulesKeyword_11() { return cMatchrulesKeyword_11; }
		
		//matchrules=MatchRules
		public Assignment getMatchrulesAssignment_12() { return cMatchrulesAssignment_12; }
		
		//MatchRules
		public RuleCall getMatchrulesMatchRulesParserRuleCall_12_0() { return cMatchrulesMatchRulesParserRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class StandardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Standard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStandardAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTieBreakingAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTieBreakingTieBreakingKeyword_1_0 = (Keyword)cTieBreakingAssignment_1.eContents().get(0);
		private final Assignment cExtraTimeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cExtraTimeExtraTimeKeyword_2_0 = (Keyword)cExtraTimeAssignment_2.eContents().get(0);
		private final Assignment cPenaltyShootoutsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cPenaltyShootoutsPenaltyShootoutsKeyword_3_0 = (Keyword)cPenaltyShootoutsAssignment_3.eContents().get(0);
		private final Keyword cStandardKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Standard returns Standard:
		//    {Standard}
		//    (tieBreaking?='tieBreaking')?
		//    (extraTime?='extraTime')?
		//    (penaltyShootouts?='penaltyShootouts')?
		//    'Standard'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Standard}
		//(tieBreaking?='tieBreaking')?
		//(extraTime?='extraTime')?
		//(penaltyShootouts?='penaltyShootouts')?
		//'Standard'
		public Group getGroup() { return cGroup; }
		
		//{Standard}
		public Action getStandardAction_0() { return cStandardAction_0; }
		
		//(tieBreaking?='tieBreaking')?
		public Assignment getTieBreakingAssignment_1() { return cTieBreakingAssignment_1; }
		
		//'tieBreaking'
		public Keyword getTieBreakingTieBreakingKeyword_1_0() { return cTieBreakingTieBreakingKeyword_1_0; }
		
		//(extraTime?='extraTime')?
		public Assignment getExtraTimeAssignment_2() { return cExtraTimeAssignment_2; }
		
		//'extraTime'
		public Keyword getExtraTimeExtraTimeKeyword_2_0() { return cExtraTimeExtraTimeKeyword_2_0; }
		
		//(penaltyShootouts?='penaltyShootouts')?
		public Assignment getPenaltyShootoutsAssignment_3() { return cPenaltyShootoutsAssignment_3; }
		
		//'penaltyShootouts'
		public Keyword getPenaltyShootoutsPenaltyShootoutsKeyword_3_0() { return cPenaltyShootoutsPenaltyShootoutsKeyword_3_0; }
		
		//'Standard'
		public Keyword getStandardKeyword_4() { return cStandardKeyword_4; }
	}
	public class ExtraTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ExtraTime");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExtraTimeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExtraTimeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtraTimeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cExtraTimeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cExtraTimeEBooleanParserRuleCall_3_1_0 = (RuleCall)cExtraTimeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtraTimeDurationKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cExtraTimeDurationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cExtraTimeDurationEIntParserRuleCall_4_1_0 = (RuleCall)cExtraTimeDurationAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ExtraTime returns ExtraTime:
		//    {ExtraTime}
		//    'ExtraTime'
		//    '{'
		//        ('extraTime' extraTime = EBoolean)?
		//        ('extraTimeDuration' extraTimeDuration=EInt)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ExtraTime}
		//'ExtraTime'
		//'{'
		//    ('extraTime' extraTime = EBoolean)?
		//    ('extraTimeDuration' extraTimeDuration=EInt)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ExtraTime}
		public Action getExtraTimeAction_0() { return cExtraTimeAction_0; }
		
		//'ExtraTime'
		public Keyword getExtraTimeKeyword_1() { return cExtraTimeKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('extraTime' extraTime = EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'extraTime'
		public Keyword getExtraTimeKeyword_3_0() { return cExtraTimeKeyword_3_0; }
		
		//extraTime = EBoolean
		public Assignment getExtraTimeAssignment_3_1() { return cExtraTimeAssignment_3_1; }
		
		//EBoolean
		public RuleCall getExtraTimeEBooleanParserRuleCall_3_1_0() { return cExtraTimeEBooleanParserRuleCall_3_1_0; }
		
		//('extraTimeDuration' extraTimeDuration=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'extraTimeDuration'
		public Keyword getExtraTimeDurationKeyword_4_0() { return cExtraTimeDurationKeyword_4_0; }
		
		//extraTimeDuration=EInt
		public Assignment getExtraTimeDurationAssignment_4_1() { return cExtraTimeDurationAssignment_4_1; }
		
		//EInt
		public RuleCall getExtraTimeDurationEIntParserRuleCall_4_1_0() { return cExtraTimeDurationEIntParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PenaltyShootoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.PenaltyShootout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPenaltyShootoutAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPenaltyShootoutKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPenaltyShootoutsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPenaltyShootoutsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPenaltyShootoutsEBooleanParserRuleCall_3_1_0 = (RuleCall)cPenaltyShootoutsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PenaltyShootout returns PenaltyShootout:
		//    {PenaltyShootout}
		//    'PenaltyShootout'
		//    '{'
		//        ('penaltyShootouts' penaltyShootouts = EBoolean)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{PenaltyShootout}
		//'PenaltyShootout'
		//'{'
		//    ('penaltyShootouts' penaltyShootouts = EBoolean)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{PenaltyShootout}
		public Action getPenaltyShootoutAction_0() { return cPenaltyShootoutAction_0; }
		
		//'PenaltyShootout'
		public Keyword getPenaltyShootoutKeyword_1() { return cPenaltyShootoutKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('penaltyShootouts' penaltyShootouts = EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'penaltyShootouts'
		public Keyword getPenaltyShootoutsKeyword_3_0() { return cPenaltyShootoutsKeyword_3_0; }
		
		//penaltyShootouts = EBoolean
		public Assignment getPenaltyShootoutsAssignment_3_1() { return cPenaltyShootoutsAssignment_3_1; }
		
		//EBoolean
		public RuleCall getPenaltyShootoutsEBooleanParserRuleCall_3_1_0() { return cPenaltyShootoutsEBooleanParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class GroupStageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.GroupStage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupStageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGroupStageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTieBreakingKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTieBreakingAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTieBreakingEBooleanParserRuleCall_3_1_0 = (RuleCall)cTieBreakingAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GroupStage returns GroupStage:
		//    {GroupStage}
		//    'GroupStage'
		//    '{'
		//        ('tieBreaking' tieBreaking=EBoolean)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupStage}
		//'GroupStage'
		//'{'
		//    ('tieBreaking' tieBreaking=EBoolean)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{GroupStage}
		public Action getGroupStageAction_0() { return cGroupStageAction_0; }
		
		//'GroupStage'
		public Keyword getGroupStageKeyword_1() { return cGroupStageKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('tieBreaking' tieBreaking=EBoolean)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'tieBreaking'
		public Keyword getTieBreakingKeyword_3_0() { return cTieBreakingKeyword_3_0; }
		
		//tieBreaking=EBoolean
		public Assignment getTieBreakingAssignment_3_1() { return cTieBreakingAssignment_3_1; }
		
		//EBoolean
		public RuleCall getTieBreakingEBooleanParserRuleCall_3_1_0() { return cTieBreakingEBooleanParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	public class TournamentTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TournamentType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cKNOCKOUTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cKNOCKOUTKNOCKOUTKeyword_0_0 = (Keyword)cKNOCKOUTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLEAGUEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLEAGUELEAGUEKeyword_1_0 = (Keyword)cLEAGUEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cROUND_ROBINEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cROUND_ROBINROUND_ROBINKeyword_2_0 = (Keyword)cROUND_ROBINEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TournamentType returns TournamentType:
		//                KNOCKOUT = 'KNOCKOUT' | LEAGUE = 'LEAGUE' | ROUND_ROBIN = 'ROUND_ROBIN';
		public EnumRule getRule() { return rule; }
		
		//KNOCKOUT = 'KNOCKOUT' | LEAGUE = 'LEAGUE' | ROUND_ROBIN = 'ROUND_ROBIN'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//KNOCKOUT = 'KNOCKOUT'
		public EnumLiteralDeclaration getKNOCKOUTEnumLiteralDeclaration_0() { return cKNOCKOUTEnumLiteralDeclaration_0; }
		
		//'KNOCKOUT'
		public Keyword getKNOCKOUTKNOCKOUTKeyword_0_0() { return cKNOCKOUTKNOCKOUTKeyword_0_0; }
		
		//LEAGUE = 'LEAGUE'
		public EnumLiteralDeclaration getLEAGUEEnumLiteralDeclaration_1() { return cLEAGUEEnumLiteralDeclaration_1; }
		
		//'LEAGUE'
		public Keyword getLEAGUELEAGUEKeyword_1_0() { return cLEAGUELEAGUEKeyword_1_0; }
		
		//ROUND_ROBIN = 'ROUND_ROBIN'
		public EnumLiteralDeclaration getROUND_ROBINEnumLiteralDeclaration_2() { return cROUND_ROBINEnumLiteralDeclaration_2; }
		
		//'ROUND_ROBIN'
		public Keyword getROUND_ROBINROUND_ROBINKeyword_2_0() { return cROUND_ROBINROUND_ROBINKeyword_2_0; }
	}
	public class PlayerPositionElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.PlayerPosition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGOALKEEPEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGOALKEEPERGOALKEEPERKeyword_0_0 = (Keyword)cGOALKEEPEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDEFENDEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDEFENDERDEFENDERKeyword_1_0 = (Keyword)cDEFENDEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMIDFIELDEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMIDFIELDERMIDFIELDERKeyword_2_0 = (Keyword)cMIDFIELDEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cATTACKEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cATTACKERATTACKERKeyword_3_0 = (Keyword)cATTACKEREnumLiteralDeclaration_3.eContents().get(0);
		
		//enum PlayerPosition returns PlayerPosition:
		//                GOALKEEPER = 'GOALKEEPER' | DEFENDER = 'DEFENDER' | MIDFIELDER = 'MIDFIELDER' | ATTACKER = 'ATTACKER';
		public EnumRule getRule() { return rule; }
		
		//GOALKEEPER = 'GOALKEEPER' | DEFENDER = 'DEFENDER' | MIDFIELDER = 'MIDFIELDER' | ATTACKER = 'ATTACKER'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GOALKEEPER = 'GOALKEEPER'
		public EnumLiteralDeclaration getGOALKEEPEREnumLiteralDeclaration_0() { return cGOALKEEPEREnumLiteralDeclaration_0; }
		
		//'GOALKEEPER'
		public Keyword getGOALKEEPERGOALKEEPERKeyword_0_0() { return cGOALKEEPERGOALKEEPERKeyword_0_0; }
		
		//DEFENDER = 'DEFENDER'
		public EnumLiteralDeclaration getDEFENDEREnumLiteralDeclaration_1() { return cDEFENDEREnumLiteralDeclaration_1; }
		
		//'DEFENDER'
		public Keyword getDEFENDERDEFENDERKeyword_1_0() { return cDEFENDERDEFENDERKeyword_1_0; }
		
		//MIDFIELDER = 'MIDFIELDER'
		public EnumLiteralDeclaration getMIDFIELDEREnumLiteralDeclaration_2() { return cMIDFIELDEREnumLiteralDeclaration_2; }
		
		//'MIDFIELDER'
		public Keyword getMIDFIELDERMIDFIELDERKeyword_2_0() { return cMIDFIELDERMIDFIELDERKeyword_2_0; }
		
		//ATTACKER = 'ATTACKER'
		public EnumLiteralDeclaration getATTACKEREnumLiteralDeclaration_3() { return cATTACKEREnumLiteralDeclaration_3; }
		
		//'ATTACKER'
		public Keyword getATTACKERATTACKERKeyword_3_0() { return cATTACKERATTACKERKeyword_3_0; }
	}
	public class FinalsFormatElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.FinalsFormat");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSINGLE_FINALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSINGLE_FINALSINGLE_FINALKeyword_0_0 = (Keyword)cSINGLE_FINALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBEST_OF_THREEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBEST_OF_THREEBEST_OF_THREEKeyword_1_0 = (Keyword)cBEST_OF_THREEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum FinalsFormat returns FinalsFormat:
		//                SINGLE_FINAL = 'SINGLE_FINAL' | BEST_OF_THREE = 'BEST_OF_THREE';
		public EnumRule getRule() { return rule; }
		
		//SINGLE_FINAL = 'SINGLE_FINAL' | BEST_OF_THREE = 'BEST_OF_THREE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SINGLE_FINAL = 'SINGLE_FINAL'
		public EnumLiteralDeclaration getSINGLE_FINALEnumLiteralDeclaration_0() { return cSINGLE_FINALEnumLiteralDeclaration_0; }
		
		//'SINGLE_FINAL'
		public Keyword getSINGLE_FINALSINGLE_FINALKeyword_0_0() { return cSINGLE_FINALSINGLE_FINALKeyword_0_0; }
		
		//BEST_OF_THREE = 'BEST_OF_THREE'
		public EnumLiteralDeclaration getBEST_OF_THREEEnumLiteralDeclaration_1() { return cBEST_OF_THREEEnumLiteralDeclaration_1; }
		
		//'BEST_OF_THREE'
		public Keyword getBEST_OF_THREEBEST_OF_THREEKeyword_1_0() { return cBEST_OF_THREEBEST_OF_THREEKeyword_1_0; }
	}
	public class TieBreakerRuleElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TieBreakerRule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGOAL_DIFFERENCEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGOAL_DIFFERENCEGOAL_DIFFERENCEKeyword_0_0 = (Keyword)cGOAL_DIFFERENCEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHEAD_TO_HEADEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHEAD_TO_HEADHEAD_TO_HEADKeyword_1_0 = (Keyword)cHEAD_TO_HEADEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cGOALS_SCOREDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cGOALS_SCOREDGOALS_SCOREDKeyword_2_0 = (Keyword)cGOALS_SCOREDEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TieBreakerRule returns TieBreakerRule:
		//                GOAL_DIFFERENCE = 'GOAL_DIFFERENCE' | HEAD_TO_HEAD = 'HEAD_TO_HEAD' | GOALS_SCORED = 'GOALS_SCORED';
		public EnumRule getRule() { return rule; }
		
		//GOAL_DIFFERENCE = 'GOAL_DIFFERENCE' | HEAD_TO_HEAD = 'HEAD_TO_HEAD' | GOALS_SCORED = 'GOALS_SCORED'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GOAL_DIFFERENCE = 'GOAL_DIFFERENCE'
		public EnumLiteralDeclaration getGOAL_DIFFERENCEEnumLiteralDeclaration_0() { return cGOAL_DIFFERENCEEnumLiteralDeclaration_0; }
		
		//'GOAL_DIFFERENCE'
		public Keyword getGOAL_DIFFERENCEGOAL_DIFFERENCEKeyword_0_0() { return cGOAL_DIFFERENCEGOAL_DIFFERENCEKeyword_0_0; }
		
		//HEAD_TO_HEAD = 'HEAD_TO_HEAD'
		public EnumLiteralDeclaration getHEAD_TO_HEADEnumLiteralDeclaration_1() { return cHEAD_TO_HEADEnumLiteralDeclaration_1; }
		
		//'HEAD_TO_HEAD'
		public Keyword getHEAD_TO_HEADHEAD_TO_HEADKeyword_1_0() { return cHEAD_TO_HEADHEAD_TO_HEADKeyword_1_0; }
		
		//GOALS_SCORED = 'GOALS_SCORED'
		public EnumLiteralDeclaration getGOALS_SCOREDEnumLiteralDeclaration_2() { return cGOALS_SCOREDEnumLiteralDeclaration_2; }
		
		//'GOALS_SCORED'
		public Keyword getGOALS_SCOREDGOALS_SCOREDKeyword_2_0() { return cGOALS_SCOREDGOALS_SCOREDKeyword_2_0; }
	}
	public class BracketSideElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.BracketSide");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUPPEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUPPERUPPERKeyword_0_0 = (Keyword)cUPPEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLOWEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLOWERLOWERKeyword_1_0 = (Keyword)cLOWEREnumLiteralDeclaration_1.eContents().get(0);
		
		//enum BracketSide returns BracketSide:
		//                UPPER = 'UPPER' | LOWER = 'LOWER';
		public EnumRule getRule() { return rule; }
		
		//UPPER = 'UPPER' | LOWER = 'LOWER'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UPPER = 'UPPER'
		public EnumLiteralDeclaration getUPPEREnumLiteralDeclaration_0() { return cUPPEREnumLiteralDeclaration_0; }
		
		//'UPPER'
		public Keyword getUPPERUPPERKeyword_0_0() { return cUPPERUPPERKeyword_0_0; }
		
		//LOWER = 'LOWER'
		public EnumLiteralDeclaration getLOWEREnumLiteralDeclaration_1() { return cLOWEREnumLiteralDeclaration_1; }
		
		//'LOWER'
		public Keyword getLOWERLOWERKeyword_1_0() { return cLOWERLOWERKeyword_1_0; }
	}
	public class MatchResultElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MatchResult");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cWINEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cWINWINKeyword_0_0 = (Keyword)cWINEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLOSSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLOSSLOSSKeyword_1_0 = (Keyword)cLOSSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDRAWEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDRAWDRAWKeyword_2_0 = (Keyword)cDRAWEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum MatchResult returns MatchResult:
		//                WIN = 'WIN' | LOSS = 'LOSS' | DRAW = 'DRAW';
		public EnumRule getRule() { return rule; }
		
		//WIN = 'WIN' | LOSS = 'LOSS' | DRAW = 'DRAW'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//WIN = 'WIN'
		public EnumLiteralDeclaration getWINEnumLiteralDeclaration_0() { return cWINEnumLiteralDeclaration_0; }
		
		//'WIN'
		public Keyword getWINWINKeyword_0_0() { return cWINWINKeyword_0_0; }
		
		//LOSS = 'LOSS'
		public EnumLiteralDeclaration getLOSSEnumLiteralDeclaration_1() { return cLOSSEnumLiteralDeclaration_1; }
		
		//'LOSS'
		public Keyword getLOSSLOSSKeyword_1_0() { return cLOSSLOSSKeyword_1_0; }
		
		//DRAW = 'DRAW'
		public EnumLiteralDeclaration getDRAWEnumLiteralDeclaration_2() { return cDRAWEnumLiteralDeclaration_2; }
		
		//'DRAW'
		public Keyword getDRAWDRAWKeyword_2_0() { return cDRAWDRAWKeyword_2_0; }
	}
	
	private final TournamentElements pTournament;
	private final TournamentFormatElements pTournamentFormat;
	private final PlayerStatisticsElements pPlayerStatistics;
	private final MatchRulesElements pMatchRules;
	private final EStringElements pEString;
	private final TournamentTypeElements eTournamentType;
	private final TeamElements pTeam;
	private final BracketElements pBracket;
	private final EIntElements pEInt;
	private final PlayerElements pPlayer;
	private final PlayerPositionElements ePlayerPosition;
	private final EDateElements pEDate;
	private final TerminalRule tDATE;
	private final DefenderElements pDefender;
	private final GoalkeeperElements pGoalkeeper;
	private final AttackerElements pAttacker;
	private final LeagueElements pLeague;
	private final RoundRobinElements pRoundRobin;
	private final KnockoutElements pKnockout;
	private final FinalsFormatElements eFinalsFormat;
	private final TieBreakerRuleElements eTieBreakerRule;
	private final EBooleanElements pEBoolean;
	private final BracketSideElements eBracketSide;
	private final MatchElements pMatch;
	private final MatchResultElements eMatchResult;
	private final StandardElements pStandard;
	private final ExtraTimeElements pExtraTime;
	private final PenaltyShootoutElements pPenaltyShootout;
	private final GroupStageElements pGroupStage;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pTournament = new TournamentElements();
		this.pTournamentFormat = new TournamentFormatElements();
		this.pPlayerStatistics = new PlayerStatisticsElements();
		this.pMatchRules = new MatchRulesElements();
		this.pEString = new EStringElements();
		this.eTournamentType = new TournamentTypeElements();
		this.pTeam = new TeamElements();
		this.pBracket = new BracketElements();
		this.pEInt = new EIntElements();
		this.pPlayer = new PlayerElements();
		this.ePlayerPosition = new PlayerPositionElements();
		this.pEDate = new EDateElements();
		this.tDATE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DATE");
		this.pDefender = new DefenderElements();
		this.pGoalkeeper = new GoalkeeperElements();
		this.pAttacker = new AttackerElements();
		this.pLeague = new LeagueElements();
		this.pRoundRobin = new RoundRobinElements();
		this.pKnockout = new KnockoutElements();
		this.eFinalsFormat = new FinalsFormatElements();
		this.eTieBreakerRule = new TieBreakerRuleElements();
		this.pEBoolean = new EBooleanElements();
		this.eBracketSide = new BracketSideElements();
		this.pMatch = new MatchElements();
		this.eMatchResult = new MatchResultElements();
		this.pStandard = new StandardElements();
		this.pExtraTime = new ExtraTimeElements();
		this.pPenaltyShootout = new PenaltyShootoutElements();
		this.pGroupStage = new GroupStageElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Tournament returns Tournament:
	//    'Tournament'
	//    name=EString
	//    '{'
	//        ('tournamentType' tournamentType=TournamentType)?
	//        ('teams' '{' teams+=Team ( "," teams+=Team)* '}' )?
	//        'tournamentformat' tournamentformat=TournamentFormat
	//        'brackets' '{' brackets+=Bracket ( "," brackets+=Bracket)* '}'
	//    '}';
	public TournamentElements getTournamentAccess() {
		return pTournament;
	}
	
	public ParserRule getTournamentRule() {
		return getTournamentAccess().getRule();
	}
	
	//TournamentFormat returns TournamentFormat:
	//    League | RoundRobin | Knockout;
	public TournamentFormatElements getTournamentFormatAccess() {
		return pTournamentFormat;
	}
	
	public ParserRule getTournamentFormatRule() {
		return getTournamentFormatAccess().getRule();
	}
	
	//PlayerStatistics returns PlayerStatistics:
	//    Defender | Goalkeeper | Attacker;
	public PlayerStatisticsElements getPlayerStatisticsAccess() {
		return pPlayerStatistics;
	}
	
	public ParserRule getPlayerStatisticsRule() {
		return getPlayerStatisticsAccess().getRule();
	}
	
	//MatchRules returns MatchRules:
	//    Standard | ExtraTime | PenaltyShootout | GroupStage;
	public MatchRulesElements getMatchRulesAccess() {
		return pMatchRules;
	}
	
	public ParserRule getMatchRulesRule() {
		return getMatchRulesAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//enum TournamentType returns TournamentType:
	//                KNOCKOUT = 'KNOCKOUT' | LEAGUE = 'LEAGUE' | ROUND_ROBIN = 'ROUND_ROBIN';
	public TournamentTypeElements getTournamentTypeAccess() {
		return eTournamentType;
	}
	
	public EnumRule getTournamentTypeRule() {
		return getTournamentTypeAccess().getRule();
	}
	
	//Team returns Team:
	//    'Team'
	//    name=EString
	//    '{'
	//        ('teamSize' teamSize=EInt)?
	//        ('managerName' managerName=EString)?
	//        'players' '{' players+=Player ( "," players+=Player)* '}'
	//    '}';
	public TeamElements getTeamAccess() {
		return pTeam;
	}
	
	public ParserRule getTeamRule() {
		return getTeamAccess().getRule();
	}
	
	//Bracket returns Bracket:
	//    'Bracket'
	//    '{'
	//        ('rounds' rounds=EInt)?
	//        ('bracketSide' bracketSide=BracketSide)
	//        'matches' '{' matches+=Match ( "," matches+=Match)* '}'
	//    '}';
	public BracketElements getBracketAccess() {
		return pBracket;
	}
	
	public ParserRule getBracketRule() {
		return getBracketAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//Player returns Player:
	//    'Player'
	//    name=EString
	//    '{'
	//        ('position' position=PlayerPosition)
	//        ('birthDate' birthDate=EDate)?
	//        ('number' number=EInt)
	//        'playerstatistics' playerstatistics=PlayerStatistics
	//    '}';
	public PlayerElements getPlayerAccess() {
		return pPlayer;
	}
	
	public ParserRule getPlayerRule() {
		return getPlayerAccess().getRule();
	}
	
	//enum PlayerPosition returns PlayerPosition:
	//                GOALKEEPER = 'GOALKEEPER' | DEFENDER = 'DEFENDER' | MIDFIELDER = 'MIDFIELDER' | ATTACKER = 'ATTACKER';
	public PlayerPositionElements getPlayerPositionAccess() {
		return ePlayerPosition;
	}
	
	public EnumRule getPlayerPositionRule() {
		return getPlayerPositionAccess().getRule();
	}
	
	//EDate returns ecore::EDate:
	//    DATE;
	public EDateElements getEDateAccess() {
		return pEDate;
	}
	
	public ParserRule getEDateRule() {
		return getEDateAccess().getRule();
	}
	
	//terminal DATE:
	//    '0'..'9''0'..'9''0'..'9''0'..'9' '-' '0'..'9''0'..'9' '-' '0'..'9''0'..'9';
	public TerminalRule getDATERule() {
		return tDATE;
	}
	
	//Defender returns Defender:
	//    {Defender}
	//    'Defender'
	//    '{'
	//        ('goals' goals=EInt)?
	//        ('assists' assists=EInt)?
	//        ('fouls' fouls=EInt)?
	//        ('yellowCards' yellowCards=EInt)?
	//        ('redCards' redCards=EInt)?
	//        ('cleansheets' cleansheets=EInt)?
	//    '}';
	public DefenderElements getDefenderAccess() {
		return pDefender;
	}
	
	public ParserRule getDefenderRule() {
		return getDefenderAccess().getRule();
	}
	
	//Goalkeeper returns Goalkeeper:
	//    {Goalkeeper}
	//    'Goalkeeper'
	//    '{'
	//        ('goals' goals=EInt)?
	//        ('assists' assists=EInt)?
	//        ('fouls' fouls=EInt)?
	//        ('yellowCards' yellowCards=EInt)?
	//        ('redCards' redCards=EInt)?
	//        ('cleansheets' cleansheets=EInt)?
	//        ('saves' saves=EInt)?
	//    '}';
	public GoalkeeperElements getGoalkeeperAccess() {
		return pGoalkeeper;
	}
	
	public ParserRule getGoalkeeperRule() {
		return getGoalkeeperAccess().getRule();
	}
	
	//Attacker returns Attacker:
	//    {Attacker}
	//    'Attacker'
	//    '{'
	//        ('goals' goals=EInt)?
	//        ('assists' assists=EInt)?
	//        ('fouls' fouls=EInt)?
	//        ('yellowCards' yellowCards=EInt)?
	//        ('redCards' redCards=EInt)?
	//        ('sprintSpeed' sprintSpeed=EInt)?
	//    '}';
	public AttackerElements getAttackerAccess() {
		return pAttacker;
	}
	
	public ParserRule getAttackerRule() {
		return getAttackerAccess().getRule();
	}
	
	//League returns League:
	//    {League}
	//    'League'
	//    name=EString
	//    '{'
	//        ('maxTeams' maxTeams=EInt)
	//        ('minTeams' minTeams=EInt)
	//        ('description' description=EString)?
	//        ('numberOfRounds' numberOfRounds=EInt)?
	//        ('finalsFormat' finalsFormat=FinalsFormat)?
	//    '}';
	public LeagueElements getLeagueAccess() {
		return pLeague;
	}
	
	public ParserRule getLeagueRule() {
		return getLeagueAccess().getRule();
	}
	
	//RoundRobin returns RoundRobin:
	//    {RoundRobin}
	//    'RoundRobin'
	//    name=EString
	//    '{'
	//        ('maxTeams' maxTeams=EInt)
	//        ('minTeams' minTeams=EInt)
	//        ('description' description=EString)?
	//        ('pointsForWin' pointsForWin=EInt)
	//        ('pointsForDraw' pointsForDraw=EInt)
	//        ('pointsForLoss' pointsForLoss=EInt)
	//        ('numberOfRounds' numberOfRounds=EInt)
	//        ('tieBreakerRule' tieBreakerRule=TieBreakerRule)?
	//    '}';
	public RoundRobinElements getRoundRobinAccess() {
		return pRoundRobin;
	}
	
	public ParserRule getRoundRobinRule() {
		return getRoundRobinAccess().getRule();
	}
	
	//Knockout returns Knockout:
	//    {Knockout}
	//    (hasThirdPlacePlayoff?='hasThirdPlacePlayoff')?
	//    'Knockout'
	//    name=EString
	//    '{'
	//        ('maxTeams' maxTeams=EInt)
	//        ('minTeams' minTeams=EInt)
	//        ('description' description=EString)?
	//        ('numberOfRounds' numberOfRounds=EInt)?
	//    '}';
	public KnockoutElements getKnockoutAccess() {
		return pKnockout;
	}
	
	public ParserRule getKnockoutRule() {
		return getKnockoutAccess().getRule();
	}
	
	//enum FinalsFormat returns FinalsFormat:
	//                SINGLE_FINAL = 'SINGLE_FINAL' | BEST_OF_THREE = 'BEST_OF_THREE';
	public FinalsFormatElements getFinalsFormatAccess() {
		return eFinalsFormat;
	}
	
	public EnumRule getFinalsFormatRule() {
		return getFinalsFormatAccess().getRule();
	}
	
	//enum TieBreakerRule returns TieBreakerRule:
	//                GOAL_DIFFERENCE = 'GOAL_DIFFERENCE' | HEAD_TO_HEAD = 'HEAD_TO_HEAD' | GOALS_SCORED = 'GOALS_SCORED';
	public TieBreakerRuleElements getTieBreakerRuleAccess() {
		return eTieBreakerRule;
	}
	
	public EnumRule getTieBreakerRuleRule() {
		return getTieBreakerRuleAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum BracketSide returns BracketSide:
	//                UPPER = 'UPPER' | LOWER = 'LOWER';
	public BracketSideElements getBracketSideAccess() {
		return eBracketSide;
	}
	
	public EnumRule getBracketSideRule() {
		return getBracketSideAccess().getRule();
	}
	
	//Match returns Match:
	//    'Match'
	//    '{'
	//        ('scoreTeam1' scoreTeam1=EInt)?
	//        ('scoreTeam2' scoreTeam2=EInt)?
	//        ('matchResult' matchResult=MatchResult)?
	//        ('day' day=EDate)
	//        'teams' '(' teams+=[Team|EString] ( "," teams+=[Team|EString])* ')'
	//        'matchrules' matchrules=MatchRules
	//    '}';
	public MatchElements getMatchAccess() {
		return pMatch;
	}
	
	public ParserRule getMatchRule() {
		return getMatchAccess().getRule();
	}
	
	//enum MatchResult returns MatchResult:
	//                WIN = 'WIN' | LOSS = 'LOSS' | DRAW = 'DRAW';
	public MatchResultElements getMatchResultAccess() {
		return eMatchResult;
	}
	
	public EnumRule getMatchResultRule() {
		return getMatchResultAccess().getRule();
	}
	
	//Standard returns Standard:
	//    {Standard}
	//    (tieBreaking?='tieBreaking')?
	//    (extraTime?='extraTime')?
	//    (penaltyShootouts?='penaltyShootouts')?
	//    'Standard'
	//    ;
	public StandardElements getStandardAccess() {
		return pStandard;
	}
	
	public ParserRule getStandardRule() {
		return getStandardAccess().getRule();
	}
	
	//ExtraTime returns ExtraTime:
	//    {ExtraTime}
	//    'ExtraTime'
	//    '{'
	//        ('extraTime' extraTime = EBoolean)?
	//        ('extraTimeDuration' extraTimeDuration=EInt)?
	//    '}';
	public ExtraTimeElements getExtraTimeAccess() {
		return pExtraTime;
	}
	
	public ParserRule getExtraTimeRule() {
		return getExtraTimeAccess().getRule();
	}
	
	//PenaltyShootout returns PenaltyShootout:
	//    {PenaltyShootout}
	//    'PenaltyShootout'
	//    '{'
	//        ('penaltyShootouts' penaltyShootouts = EBoolean)?
	//    '}';
	public PenaltyShootoutElements getPenaltyShootoutAccess() {
		return pPenaltyShootout;
	}
	
	public ParserRule getPenaltyShootoutRule() {
		return getPenaltyShootoutAccess().getRule();
	}
	
	//GroupStage returns GroupStage:
	//    {GroupStage}
	//    'GroupStage'
	//    '{'
	//        ('tieBreaking' tieBreaking=EBoolean)?
	//    '}';
	public GroupStageElements getGroupStageAccess() {
		return pGroupStage;
	}
	
	public ParserRule getGroupStageRule() {
		return getGroupStageAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
