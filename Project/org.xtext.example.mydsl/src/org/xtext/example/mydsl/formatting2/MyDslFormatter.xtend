/*
 * generated by Xtext 2.36.0
 */
package org.xtext.example.mydsl.formatting2

import com.google.inject.Inject
import fta_domain_model.Team
import fta_domain_model.Tournament
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl.services.MyDslGrammarAccess

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(Tournament tournament, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (team : tournament.teams) {
			team.format
		}
		tournament.tournamentformat.format
		for (bracket : tournament.brackets) {
			bracket.format
		}
	}

	def dispatch void format(Team team, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (player : team.players) {
			player.format
		}
	}
	
	// TODO: implement for Bracket, Player, Match
}
